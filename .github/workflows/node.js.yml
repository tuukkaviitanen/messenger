# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-backend:

    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    env:
      POSTGRES_URL_TEST: postgres://postgres:postgres@localhost:5432/postgres
      JWT_SECRET: = test_secret

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    defaults:
      run:
        working-directory: ./server

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install backend dependencies
      run: npm ci

    - name: Run backend linter
      run: npm run lint

    - name: Build backend
      run: npm run build

    - name: Run backend tests
      run: npm test

    - name: Install frontend dependencies
      run: npm ci
      working-directory: ./client

    - name: Run frontend linter
      run: npm run lint
      working-directory: ./client

    - name: Build frontend
      run: npm run build
      working-directory: ./client

    - name: Run end-to-end tests
      uses: cypress-io/github-action@v6
      env:
        CYPRESS_BASE_URL: http://localhost:3000
      with:
        command: npm run test:e2e
        start: npm run start:test
        wait-on: http://localhost:3000
        working-directory: ./server
